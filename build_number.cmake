# Build number increment
# Author: nandee95
# Github: https://github.com/nandee95/Auto_Build_Number_Increment
# License: MIT

#Check language
get_property(languages GLOBAL PROPERTY ENABLED_LANGUAGES)

#Check input
set(AVAILABLE_LANGUAGES CXX;C)

IF(NOT LANGUAGE)
	message("Error: The target language not defined!")
	return(1)
ENDIF()

#This is required for "IN_LIST"
cmake_policy(SET CMP0057 NEW)
IF(NOT LANGUAGE IN_LIST AVAILABLE_LANGUAGES)
	message("build_number.cmake : The target language not supported!")
	return(1)
ENDIF()

IF(NOT HEADER_DIR)
	message("build_number.cmake : Header directory is not set!")
	return(1)
ENDIF()

IF(NOT EXISTS ${HEADER_DIR})
	message("build_number.cmake : Header directory not found!")
	return(1)
ENDIF()

IF(NOT CACHE_DIR)
	message("build_number.cmake : Cache directory is not set!")
	return(1)
ENDIF()

IF(NOT EXISTS ${CACHE_DIR})
	message("build_number.cmake : Cache directory not found!")
	return(1)
ENDIF()

IF(NOT HEADER_FILENAME)
	set(HEADER_FILENAME "firmware_version")
ENDIF()

IF(NOT HEADER_MACRO)
	set(HEADER_MACRO "BUILD_NUMBER")
ENDIF()

IF(NOT HEADER_GUARD)
	set(HEADER_GUARD "CMAKE_BUILD_NUMBER_HEADER")
endif()

IF(NOT CACHE_FILENAME)
	set(CACHE_FILENAME "CMakeBuildNumberCache.txt")
ENDIF()

#Basic definitions
if(${LANGUAGE} STREQUAL "CXX")
	set(HEADER_EXTENSION "hpp")
ELSEIF(${LANGUAGE} STREQUAL "C")
	set(HEADER_EXTENSION "h")
ELSE()
	message("build_number.cmake : Internal error")
	return(1)
ENDIF()

set(HEADER_FILE "${HEADER_DIR}/${HEADER_FILENAME}.${HEADER_EXTENSION}")
set(CACHE_FILE "${CACHE_DIR}/${CACHE_FILENAME}")

#Reading data from file + incrementation
IF(EXISTS ${CACHE_FILE})
	file(READ ${CACHE_FILE} NUMBERS)
	list(GET NUMBERS 2 BUILD_NUMBER0)
	list(GET NUMBERS 1 BUILD_NUMBER1)
	list(GET NUMBERS 0 BUILD_NUMBER2)

	math(EXPR BUILD_NUMBER0 "${BUILD_NUMBER0}+1")
	IF(BUILD_NUMBER0 EQUAL 256)
		set(BUILD_NUMBER0 "0")
		math(EXPR BUILD_NUMBER1 "${BUILD_NUMBER1}+1")
		IF(BUILD_NUMBER1 EQUAL 256)
			set(BUILD_NUMBER1 "0")
			math(EXPR BUILD_NUMBER2 "${BUILD_NUMBER2}+1")
		ENDIF()
	ENDIF()
ELSE()
	set(BUILD_NUMBER0 "0")
	set(BUILD_NUMBER1 "0")
	set(BUILD_NUMBER2 "0")
ENDIF()

#Update the cache
file(WRITE ${CACHE_FILE} "${BUILD_NUMBER2};${BUILD_NUMBER1};${BUILD_NUMBER0}")

set(FIRMWARE_VERSION "${BUILD_NUMBER2}.${BUILD_NUMBER1}.${BUILD_NUMBER0}")

#Create the header
file(WRITE ${HEADER_FILE}
"//This file is automatically generated by build_number.cmake

#ifndef ${HEADER_GUARD}\n#define ${HEADER_GUARD}

#define ${HEADER_MACRO}0 ${BUILD_NUMBER0}
#define ${HEADER_MACRO}1 ${BUILD_NUMBER1}
#define ${HEADER_MACRO}2 ${BUILD_NUMBER2}

#define FIRMWARE_VERSION \"${FIRMWARE_VERSION}\"

#endif")

#Feedback
message("FIRMWARE_VERSION: ${FIRMWARE_VERSION}")
